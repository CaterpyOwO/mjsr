(()=>{"use strict";var t={802:(t,e,r)=>{class s{constructor(t=[0,0,0],e=[0,0,0],r=6){return this.pos=t,this.rot=e,this.fov=100*r,this}projectVertex2d(t,e){let[r,s,i]=t;r-=this.pos[0],s-=this.pos[1],i-=this.pos[2],[r,i]=this.rotateVertex2d([r,i],this.rot[1]),[s,i]=this.rotateVertex2d([s,i],this.rot[0]);let o=this.fov/Math.max(0,i);return r*=o,s*=o,[r+e.width/2,s+e.height/2,i]}rotateVertex2d(t,e){let[r,s]=t,i=Math.sin(e),o=Math.cos(e);return[r*o-s*i,s*o+r*i]}}class i{constructor(t={width:640,height:480},e=document.body,r){return r instanceof HTMLCanvasElement?this.canvas=r:this.canvas=document.createElement("canvas"),this.canvas.width=t.width,this.canvas.height=t.height,this.gl=this.canvas.getContext("webgl"),this.parent=e,e instanceof HTMLElement&&e.appendChild(this.canvas),this}fullscreen(){this.canvas.width=innerWidth,this.canvas.height=innerHeight,window.addEventListener("resize",(()=>{this.canvas.width=innerWidth,this.canvas.height=innerHeight}));let t=document.createElement("style");return t.innerText="html,body{margin:0;overflow:hidden}",document.head.appendChild(t),this}fillParent(){return this.canvas.width=this.parent.clientWidth,this.canvas.height=this.parent.clientHeight,window.addEventListener("resize",(()=>{this.canvas.width=this.parent.clientWidth,this.canvas.height=this.parent.clientHeight})),this}square(t){return this.canvas.width=t,this.canvas.height=t,this}rect(t,e){return this.canvas.width=t,this.canvas.height=e,this}}const o={None:class{update(){}setAttributes(){}setupMovement(){}},FirstPerson:class{constructor(){this.keys=[]}setAttributes(t,e){this.screen=t,this.camera=e}setupMovement(){let{canvas:t}=this.screen;window.addEventListener("keydown",(t=>this.keys[t.key]=!0)),window.addEventListener("keyup",(t=>this.keys[t.key]=!1));let e=t=>Math.abs(t.movementX)>50||Math.abs(t.movementY)>50?void 0:this.mouseRotation([t.movementX,t.movementY]);t.requestPointerLock=t.requestPointerLock||t.mozRequestPointerLock,document.exitPointerLock=document.exitPointerLock||document.mozExitPointerLock,t.onclick=()=>t.requestPointerLock();let r=()=>{document.pointerLockElement===t||document.mozPointerLockElement===t?t.onmousemove=e:t.onmousemove=null};document.addEventListener("pointerlockchange",r),document.addEventListener("mozpointerlockchange",r)}mouseRotation(t,e=3){let[r,s]=t;r/=e*=100,s/=e,this.camera.rot[0]+s<Math.PI/2&&this.camera.rot[0]+s>-Math.PI/2&&(this.camera.rot[0]+=s),this.camera.rot[1]+=r}update(t){let{canvas:e}=this.screen;if(document.pointerLockElement==e||document.mozPointerLockElement==e){let e=t/160;(this.keys.q||this.keys[" "])&&(this.camera.pos[1]+=e),(this.keys.e||this.keys.Shift)&&(this.camera.pos[1]-=e);let r=e*Math.sin(this.camera.rot[1]),s=e*Math.cos(this.camera.rot[1]);this.keys.w&&(this.camera.pos[0]-=r,this.camera.pos[2]-=s),this.keys.s&&(this.camera.pos[0]+=r,this.camera.pos[2]+=s),this.keys.a&&(this.camera.pos[0]+=s,this.camera.pos[2]-=r),this.keys.d&&(this.camera.pos[0]-=s,this.camera.pos[2]+=r)}}},ModelRotate:class{constructor(){this.keys=[]}setAttributes(t,e){this.screen=t,this.camera=e}setupMovement(){let{canvas:t}=this.screen,e=[0,0];const r=t=>this.mouseRotation([t.movementX,t.movementY]);t.onmousedown=()=>t.onmousemove=r,window.onmouseup=()=>t.onmousemove=null,t.addEventListener("touchstart",(t=>e=[t.touches[0].screenX,t.touches[0].screenY]),{passive:!0}),t.addEventListener("touchmove",(t=>(this.mouseRotation([-(e[0]-t.touches[0].screenX),e[1]-t.touches[0].screenY]),e=[t.touches[0].screenX,t.touches[0].screenY])),{passive:!0}),t.addEventListener("touchend",(()=>(t.ontouchmove=null,e=[0,0])))}mouseRotation(t){let{pos:e}=this.camera;t[0]*=.01,this.camera.pos=this.rotate2d(e,-t[0],[0,2]),this.camera.rot[1]+=t[0]}rotate2d(t,e,r){let[s,i]=r,[o,n]=[t[s],t[i]],a=Math.sin(e),h=Math.cos(e);return t[s]=o*h-n*a,t[i]=n*h+o*a,t}update(){}}};function n(t){let e=[t[1][0]-t[0][0],t[1][1]-t[0][1],t[1][2]-t[0][2]],r=[t[2][0]-t[0][0],t[2][1]-t[0][1],t[2][2]-t[0][2]];return function(t){let e=Math.sqrt(t[0]**2+t[1]**2+t[2]**2);return[t[0]/=e,t[1]/=e,t[2]/=e]}([e[1]*r[2]-e[2]*r[1],e[2]*r[0]-e[0]*r[2],e[0]*r[1]-e[1]*r[0]])}function a(t){if("#"==!t.charAt(0))throw new Error(t+" is not a HEX colour.");return[...(t=3==(t=t.substr(1)).length?t.split("").reduce(((t,e)=>t.push(e+e)&&t),[]):t.match(/.{1,2}/g)).map((t=>{return e=parseInt(t,16)/255,0,1,Math.max(Math.min(e,1),0);var e})),1]}t=r.hmd(t);let h={Renderer:class{constructor(t=new i,e=new s,r=new o.None){return this.screen=t,this.camera=e,r.setAttributes(t,e),this.input=r,this.dt=0,this.last=0,this}setup(t){this.scene=t,this.meshes=[];for(let t of this.scene){if("object"!=typeof t)throw new Error("Invalid object in scene.");const e={0:["coords","verts","colours","primitive"],1:["coords","verts","edges","colours","primitive"],2:["coords","verts","faces","colours","primitive"]},r=["points","lines","triangles"];let s;"string"==typeof t.primitive&&void 0!==r.includes(t.primitive)&&(s=r.indexOf(t.primitive));for(let r of e[s])if(void 0===t[r])throw new Error(`Object doesn't have required property ${r}.`);let i={position:[],colour:[],normal:[],primitive:s};switch(s){case 0:for(let e of t.verts){let r=a(t.colours[e[3]]);i.position.push(e[0],e[1],e[2]),i.colour.push(...r)}break;case 1:for(let e of t.edges){let r=a(t.colours[e[2]]);i.position.push(...t.verts[e[1]],...t.verts[e[0]]),i.colour.push(...r,...r)}break;case 2:for(let e of t.faces){let r=n([t.verts[e[0]],t.verts[e[1]],t.verts[e[2]]]),s=a(t.colours[e[3]]);i.position.push(...t.verts[e[2]],...t.verts[e[1]],...t.verts[e[0]]),i.colour.push(...s,...s,...s),i.normal.push(...r,...r,...r)}}this.meshes.push(i)}const{gl:e}=this.screen,r=new class{constructor(t){return this.gl=t,this.shaders=[],this.glprogram=null,this}frag(t){this.shader(t,this.gl.FRAGMENT_SHADER)}vert(t){this.shader(t,this.gl.VERTEX_SHADER)}shader(t,e){if(t=t.raw?t.raw.join(""):t,!e){let r=new RegExp("// ?vert(ex)?( |_|-)shader","i"),s=new RegExp("// ?frag(ment)?( |_|-)shader","i");if(r.test(t))e=this.gl.VERTEX_SHADER;else{if(!s.test(t))throw new Error("No shader type found.");e=this.gl.FRAGMENT_SHADER}}let r=this.gl.createShader(e);if(this.gl.shaderSource(r,t),this.gl.compileShader(r),this.gl.getShaderParameter(r,this.gl.COMPILE_STATUS))return this.shaders.push(r),r;let s=new Error(this.gl.getShaderInfoLog(r));throw this.gl.deleteShader(r),s}program(...t){if(0==t.length&&(t=this.shaders),0==t.length)throw new Error("No shaders were supplied.");let e=this.gl.createProgram();for(let r of t)this.gl.attachShader(e,r);if(this.gl.linkProgram(e),this.gl.getProgramParameter(e,this.gl.LINK_STATUS))return this.glprogram=e,e;let r=new Error(this.gl.getProgramInfoLog(e));throw this.gl.deleteProgram(e),r}buffers(t,e){if(0==t.length)throw new Error("No buffers were supplied.");for(let r in t){let s=t[r];this.buffer32f(s,this.gl.ARRAY_BUFFER);let i=this.gl.getAttribLocation(this.glprogram,r);this.gl.enableVertexAttribArray(i),e[r]?this.gl.vertexAttribPointer(i,e[r],this.gl.FLOAT,!1,0,0):this.gl.vertexAttribPointer(i,3,this.gl.FLOAT,!1,0,0)}}buffer32f(t,e){let r=this._bufferInit(e);return this.gl.bufferData(e,new Float32Array(t),this.gl.STATIC_DRAW),r}buffer16u(t,e){let r=this._bufferInit(e);return this.gl.bufferData(e,new Uint16Array(t),this.gl.STATIC_DRAW),r}buffer32u(t,e){let r=this._bufferInit(e);return this.gl.bufferData(e,new Uint32Array(t),this.gl.STATIC_DRAW),r}_bufferInit(t){const e=this.gl.createBuffer();return this.gl.bindBuffer(t,e),e}}(e);this.w=r,r.vert("\n\t\t\tprecision mediump float;\n\n            attribute vec4 position;\n            attribute vec4 colour;\n            attribute vec4 normal;\n\n\t\t\tuniform int u_primitive;\n\t\t\t// varying int v_primitive;\n            \n            varying vec4 v_colour;\n            varying vec4 v_normal;\n\n            uniform vec3 u_pos;\n            uniform vec3 u_rot;\n\n\t\t\tuniform vec2 u_canvas;\t\t\t\n\t\t\t\n\t\t\tvarying vec3 v_surfaceLight;\n\n\n            vec2 rotate2d(vec2 pos, float rad) {\n                float s = sin(rad);\n                float c = cos(rad);\n        \n                return vec2(pos.x * c - pos.y * s, pos.y * c + pos.x * s);\n            }\n\n\n            vec3 project(vec3 vertex) {\n                vertex.x -= u_pos.x;\n                vertex.y -= u_pos.y;\n                vertex.z -= u_pos.z;\n                \n                vertex.xz = rotate2d(vertex.xz, u_rot.y);\n                vertex.yz = rotate2d(vertex.yz, u_rot.x);\n                \n                float f = 600.0 / max(0.0, vertex.z);\n                vertex.x *= f;\n                vertex.y *= f;\n\n                return vec3(vertex.x / u_canvas.x * 2.0, -(vertex.y / u_canvas.y * 2.0), vertex.z / 1000.0);\n\t\t\t}\n\n\n\t\t\tvec4 light = vec4(0.0, 5.0, 5.0, 1.0);\n\n\t\t\tvoid main() {\n\t\t\t\tv_colour = colour;\n\t\t\t\t// v_primitive = u_primitive;\n\n\t\t\t\tif (u_primitive == 2) {\n\t\t\t\t\tv_surfaceLight = light.xyz - position.xyz;\n\t\t\t\t\tv_normal = normal;\n\t\t\t\t} else if (u_primitive == 0) gl_PointSize = 5.0;\n\n\n                vec3 projected = project(position.xyz);\n\t\t\t\tgl_Position = vec4(projected.xyz, 1.0);\n\t\t\t\t\n            }\n        "),r.frag("\n            precision mediump float;\n\n            varying vec4 v_normal;\n\t\t\tvarying vec4 v_colour;\n\n\t\t\tuniform highp int u_primitive;\n\n\t\t\tvarying vec3 v_surfaceLight;\n\t\t\t\n\t\t\tvec4 lightd = vec4(0.0, 5.0, 5.0, 1.0);\n\n            void main() {\n\t\t\t\t// float lum = (v_colour.r + v_colour.g + v_colour.b) / 3.0;\n\t\t\t\t// vec2 monoColour = vec2(lum, v_colour.a);\n\n\t\t\t\tgl_FragColor = v_colour;\n\n\t\t\t\tif (u_primitive == 2) {\n\t\t\t\t\tfloat light = dot(normalize(v_normal.xyz), normalize(v_surfaceLight));\n\t\t\t\t\tgl_FragColor.rgb *= clamp(light, 0.3, 1.0);\n\t\t\t\t}\n            }\n\t\t"),this.program=r.program(),e.clearColor(1,1,1,1),e.enable(e.DEPTH_TEST),e.enable(e.CULL_FACE),this.input.setupMovement()}draw(){const{gl:t}=this.screen;t.viewport(0,0,t.drawingBufferWidth,t.drawingBufferHeight),t.clear(t.COLOR_BUFFER_BIT|t.DEPTH_BUFFER_BIT),t.useProgram(this.program),t.uniform3fv(t.getUniformLocation(this.program,"u_pos"),this.camera.pos),t.uniform3fv(t.getUniformLocation(this.program,"u_rot"),this.camera.rot),t.uniform2fv(t.getUniformLocation(this.program,"u_canvas"),[t.drawingBufferWidth,t.drawingBufferHeight]);for(let e of this.meshes){let r=e.primitive;t.uniform1i(t.getUniformLocation(this.program,"u_primitive"),r),this.w.buffers({position:e.position,normal:e.normal,colour:e.colour},{colour:4});let s=[t.POINTS,t.LINES,t.TRIANGLES];t.drawArrays(s[r],0,e.position.length/(r+1))}t.useProgram(null)}update(t){this.dt=this.last-t,this.last=t,this.input.update(this.dt)}},Screen:i,Camera:s,input:o,objects:{Cube:class{constructor(t=[0,0,0]){let[e,r,s]=t;this.coords=t,this.primitive="triangles",this.verts=[[e-1,r-1,s-1],[e+1,r-1,s-1],[e+1,r+1,s-1],[e-1,r+1,s-1],[e-1,r-1,s+1],[e+1,r-1,s+1],[e+1,r+1,s+1],[e-1,r+1,s+1]],this.edges=[[0,1],[1,2],[2,3],[3,0],[4,5],[5,6],[6,7],[7,4],[0,4],[1,5],[2,6],[3,7]],this.faces=[[0,1,2,0],[2,3,0,0],[1,5,6,1],[6,2,1,1],[4,5,1,2],[1,0,4,2],[6,5,4,3],[4,7,6,3],[7,4,0,4],[0,3,7,4],[2,6,7,5],[7,3,2,5]],this.colours=["#0ff","#0f0","#f0f","#00f","#ff0","#f00"]}}}};"function"==typeof define&&r.amdO?define([],(()=>h)):"object"==typeof exports?t.exports=h:window.mjsr=h}},e={};function r(s){if(e[s])return e[s].exports;var i=e[s]={id:s,loaded:!1,exports:{}};return t[s](i,i.exports,r),i.loaded=!0,i.exports}r.amdO={},r.hmd=t=>((t=Object.create(t)).children||(t.children=[]),Object.defineProperty(t,"exports",{enumerable:!0,set:()=>{throw new Error("ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: "+t.id)}}),t),r(802)})();